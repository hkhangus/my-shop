basePath: /api/v1
definitions:
  dto.BookCategoryDTO:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dto.BookDTO:
    properties:
      ID:
        type: integer
      author:
        type: string
      category_id:
        type: integer
      desc:
        type: string
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      status:
        type: boolean
      total_sold:
        type: integer
    type: object
  dto.BookInOrderDTO:
    properties:
      ID:
        type: integer
      author:
        type: string
      category_id:
        type: integer
      desc:
        type: string
      name:
        type: string
      order_quantity:
        type: integer
      price:
        type: integer
      quantity:
        type: integer
      status:
        type: boolean
      total_sold:
        type: integer
    type: object
  dto.BooksInCreateOrder:
    properties:
      id:
        type: integer
      quantity:
        type: integer
    type: object
  dto.CreateBookOrderDTO:
    properties:
      quantity:
        type: integer
    type: object
  dto.CreateOrderDTO:
    properties:
      books:
        items:
          $ref: '#/definitions/dto.BooksInCreateOrder'
        type: array
    type: object
  dto.OrderDTO:
    properties:
      books:
        items:
          $ref: '#/definitions/dto.BookInOrderDTO'
        type: array
      created_at:
        type: string
      id:
        type: integer
      status:
        type: boolean
      total:
        type: integer
    type: object
  dto.UpdateOrderDTO:
    properties:
      books:
        items:
          $ref: '#/definitions/dto.BooksInCreateOrder'
        type: array
      id:
        type: integer
    type: object
  dto.UserDTO:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  httpErrors.RestError:
    properties:
      error:
        type: string
      status:
        type: integer
    type: object
  importdata.BookImport:
    properties:
      author:
        type: string
      desc:
        type: string
      name:
        type: string
      price:
        type: integer
      quantity:
        type: integer
      total_sold:
        type: integer
    type: object
  importdata.ImportData:
    properties:
      book_categories:
        items:
          type: string
        type: array
      books:
        items:
          $ref: '#/definitions/importdata.BookImport'
        type: array
      categories:
        items:
          type: string
        type: array
    type: object
  utils.PaginationList:
    properties:
      has_more:
        type: boolean
      list: {}
      page:
        type: integer
      size:
        type: integer
      total_count:
        type: integer
      total_pages:
        type: integer
    type: object
info:
  contact:
    email: vldtruong1221@gmail.com
    name: Duy Truong
    url: https://github.com/scul0405
  description: Book's management server written by Golang
  title: Windows Programming - Backend
  version: "1.0"
paths:
  /book_categories:
    get:
      consumes:
      - application/json
      description: List book categories, return list of book categories
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.PaginationList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: List book categories
      tags:
      - Book Category
    post:
      consumes:
      - application/json
      description: create book category, returns book category
      parameters:
      - description: input data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BookCategoryDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.BookCategoryDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Create book category
      tags:
      - Book Category
  /book_categories/{id}:
    delete:
      consumes:
      - application/json
      description: delete book category
      parameters:
      - description: book category id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Delete book category
      tags:
      - Book Category
    patch:
      consumes:
      - application/json
      description: update book category, returns book category
      parameters:
      - description: book category id
        in: path
        name: id
        required: true
        type: integer
      - description: input data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BookCategoryDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BookCategoryDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Update book category
      tags:
      - Book Category
  /books:
    get:
      consumes:
      - application/json
      description: List books, return list of books
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      - description: name
        in: query
        name: name
        type: string
      - description: min price
        in: query
        name: min
        type: integer
      - description: max price
        in: query
        name: max
        type: integer
      - description: category name
        in: query
        name: category_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.PaginationList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: List books
      tags:
      - Book
    post:
      consumes:
      - application/json
      description: create book, returns book
      parameters:
      - description: input data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BookDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.BookDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Create book
      tags:
      - Book
  /books/{id}:
    delete:
      consumes:
      - application/json
      description: Delete book by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Delete book by id
      tags:
      - Book
    get:
      consumes:
      - application/json
      description: Get a book by id, returns book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BookDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get a book by id
      tags:
      - Book
    patch:
      consumes:
      - application/json
      description: update book by id, returns book
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: input data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.BookDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BookDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Update book by id
      tags:
      - Book
  /import:
    post:
      consumes:
      - application/json
      description: import data including books, book_categories, categories
      parameters:
      - description: input data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/importdata.ImportData'
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Import Data
      tags:
      - Import Data
  /orders:
    get:
      consumes:
      - application/json
      description: List orders, return list of orders
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      - description: 'date from (format: yyyy-mm-dd)'
        in: query
        name: from
        type: string
      - description: 'date to (format: yyyy-mm-dd)'
        in: query
        name: to
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.PaginationList'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: List orders
      tags:
      - Order
    post:
      consumes:
      - application/json
      description: create an order, returns order
      parameters:
      - description: input data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateOrderDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.OrderDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Create order
      tags:
      - Order
  /orders/{id}:
    delete:
      consumes:
      - application/json
      description: Delete order by id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Delete order by id
      tags:
      - Order
    get:
      consumes:
      - application/json
      description: Get an order by id, returns order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Get an order by id
      tags:
      - Order
    patch:
      consumes:
      - application/json
      description: update an order by id, returns order
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: input data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateOrderDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.OrderDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Update order by id
      tags:
      - Order
  /orders/{id}/books/{bid}:
    post:
      consumes:
      - application/json
      description: Add book to order
      parameters:
      - description: input data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateBookOrderDTO'
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: bid
        in: path
        name: bid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: success
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Add book to order
      tags:
      - Order
  /users/login:
    post:
      consumes:
      - application/json
      description: login user, returns username
      parameters:
      - description: input data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.UserDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Login user
      tags:
      - User
  /users/register:
    post:
      consumes:
      - application/json
      description: register new user, returns username
      parameters:
      - description: input data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UserDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.UserDTO'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/httpErrors.RestError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/httpErrors.RestError'
      summary: Register new user
      tags:
      - User
swagger: "2.0"
